<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>搭建hexo博客（二）</title>
      <link href="/2025/09/23/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A22/"/>
      <url>/2025/09/23/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A22/</url>
      
        <content type="html"><![CDATA[<h2 id="一、安装主题"><a href="#一、安装主题" class="headerlink" title="一、安装主题"></a>一、安装主题</h2><h3 id="1-Git安裝"><a href="#1-Git安裝" class="headerlink" title="1. Git安裝"></a>1. Git安裝</h3><p>1.1 在博客根目录里安装最新版主题<br>anzhiyu主题：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b main https://github.com/anzhiyu-c/hexo-theme-anzhiyu.git themes/anzhiyu</span><br></pre></td></tr></table></figure><p>butterfly主题：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>1.2. 第一次使用需要安装 pug 以及 stylus 的渲染器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h3 id="2-应用主题"><a href="#2-应用主题" class="headerlink" title="2. 应用主题"></a>2. 应用主题</h3><p>修改 hexo 配置文件_config.yml，把主题改为anzhiyu或butterfly</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">anzhiyu</span></span><br></pre></td></tr></table></figure><h3 id="3-覆盖配置"><a href="#3-覆盖配置" class="headerlink" title="3. 覆盖配置"></a>3. 覆盖配置</h3><p>覆盖配置可以使主题配置放置在anzhiyu或butterfly目录之外，避免在更新主题时丢失自定义的配置。</p><p>如果你是linux系统就执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> -rf ./themes/anzhiyu/_config.yml ./_config.anzhiyu.yml</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> -rf ./themes/butterfly/_config.yml ./_config.butterfly.yml</span><br></pre></td></tr></table></figure><p>如果你是windows系统就请手动将&#x2F;themes&#x2F;anzhiyu&#x2F;_config.yml(&#x2F;themes&#x2F;butterfly&#x2F;_config.yml)复制到根目录下并重命名为_config.butterfly.yml即可。</p><p>以后如果修改任何主题配置，都只需修改 _config.anzhiyu.yml(_config.butterfly.yml) 的配置即可。<br>也可以用cmd</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy <span class="string">&quot;themes\butterfly\_config.yml&quot;</span> <span class="string">&quot;_config.butterfly.yml&quot;</span></span><br></pre></td></tr></table></figure><h3 id="4-基础配置"><a href="#4-基础配置" class="headerlink" title="4. 基础配置"></a>4. 基础配置</h3><p>Hexo 全局配置文件：_config.yml<br>官方文档：<a href="https://hexo.io/zh-cn/docs/configuration">https://hexo.io/zh-cn/docs/configuration</a></p><p>Butterfly 主题配置文件：_config.butterfly.yml<br>官方文档：<a href="https://butterfly.js.org/">https://butterfly.js.org</a></p><p>注意：</p><ul><li>只要存在于 _config.anzhiyu.yml 的配置都是高优先级，修改原 _config.yml 是无效的。</li><li>每次更新主题可能存在配置变更，请注意更新说明，可能需要手动对 _config.anzhiyu.yml 同步修改。</li><li>想查看覆盖配置有没有生效，可以通过 hexo g –debug 查看命令行输出。</li><li>如果想将某些配置覆盖为空，注意不要把主键删掉，不然是无法覆盖的</li></ul><h3 id="5-配置主题与主站配置文件"><a href="#5-配置主题与主站配置文件" class="headerlink" title="5. 配置主题与主站配置文件"></a>5. 配置主题与主站配置文件</h3><p>到这一步主题部署就完成了，就是这么简单！！！</p><p><span style="color:#008000">本地预览</span></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl; hexo s</span><br></pre></td></tr></table></figure><p><span style="color:#008000">推送更新</span></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl; hexo g; hexo d</span><br></pre></td></tr></table></figure><h2 id="二、主要配置"><a href="#二、主要配置" class="headerlink" title="二、主要配置"></a>二、主要配置</h2><h3 id="1-生成标签页"><a href="#1-生成标签页" class="headerlink" title="1. 生成标签页"></a>1. 生成标签页</h3><ul><li>执行以下命令生成标签页</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><ul><li>找到 source&#x2F;tags&#x2F;index.md 这个文件，修改添加 type: “tags”</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2025-07-05 03:36:02</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br><span class="line">top_img: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="2-生成分类页"><a href="#2-生成分类页" class="headerlink" title="2. 生成分类页"></a>2. 生成分类页</h3><ul><li>执行以下命令生成分类页</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><ul><li>找到 source&#x2F;categories&#x2F;index.md 这个文件，修改添加 type: “categories”</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2025-07-05 03:36:48</span><br><span class="line">aside: false</span><br><span class="line">top_img: false</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>剩下的工作就是配置_config.yml和_config.anzhiyu.yml文件，修改博客参数。</p><h3 id="3-配置文章模版"><a href="#3-配置文章模版" class="headerlink" title="3. 配置文章模版"></a>3. 配置文章模版</h3><p>&#x2F;scaffolds目录下有几个模版文件，其中</p><ul><li>post.md：新建博文模版</li><li>page.md：新建标签页模版</li></ul><ul><li>post.md模版，仅供参考</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125; <span class="comment">#【必需】页面标题</span></span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125; <span class="comment">#【必需】页面创建日期</span></span><br><span class="line"><span class="attr">updated:</span> <span class="comment">#【可选】页面更新日期</span></span><br><span class="line"><span class="attr">tags:</span> <span class="comment">#【可选】文章标签</span></span><br><span class="line"><span class="attr">categories:</span> <span class="comment">#【可选】文章分类</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="comment">#【可选】文章关键字</span></span><br><span class="line"><span class="attr">description:</span> <span class="comment">#【可选】文章描述</span></span><br><span class="line"><span class="attr">top:</span> <span class="comment"># 1 置顶</span></span><br><span class="line"><span class="attr">top_img:</span> <span class="comment">#【可选】文章顶部图片</span></span><br><span class="line"><span class="attr">comments:</span> <span class="comment">#【可选】显示文章评论模块(默认 true)</span></span><br><span class="line"><span class="attr">cover:</span> <span class="string">https://img.090227.xyz/file/ae62475a131f3734a201c.png</span> <span class="comment">#【可选】文章缩略图(如果没有设置 top_img,文章页顶部将显示缩略图，可设为 false/图片地址/留空)</span></span><br><span class="line"><span class="attr">toc:</span> <span class="comment">#【可选】显示文章 TOC(默认为设置中 toc 的 enable 配置)</span></span><br><span class="line"><span class="attr">toc_number:</span> <span class="comment">#【可选】显示 toc_number(默认为设置中 toc 的 number 配置)</span></span><br><span class="line"><span class="attr">toc_style_simple:</span> <span class="comment">#【可选】显示 toc 简洁模式</span></span><br><span class="line"><span class="attr">copyright:</span> <span class="comment">#【可选】显示文章版权模块(默认为设置中 post_copyright 的 enable 配置)</span></span><br><span class="line"><span class="attr">copyright_author:</span> <span class="comment">#【可选】文章版权模块的文章作者</span></span><br><span class="line"><span class="attr">copyright_author_href:</span> <span class="comment">#【可选】文章版权模块的文章作者链接</span></span><br><span class="line"><span class="attr">copyright_url:</span> <span class="comment">#【可选】文章版权模块的文章作者链接</span></span><br><span class="line"><span class="attr">copyright_info:</span> <span class="comment">#【可选】文章版权模块的版权声明文字</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="comment">#【可选】显示 mathjax(当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</span></span><br><span class="line"><span class="attr">katex:</span> <span class="comment">#【可选】显示 katex(当设置 katex 的 per_page: false 时，才需要配置，默认 false)</span></span><br><span class="line"><span class="attr">aplayer:</span> <span class="comment">#【可选】在需要的页面加载 aplayer 的 js 和 css,请参考文章下面的音乐 配置</span></span><br><span class="line"><span class="attr">highlight_shrink:</span> <span class="comment">#【可选】配置代码框是否展开(true/false)(默认为设置中 highlight_shrink 的配置)</span></span><br><span class="line"><span class="attr">aside:</span> <span class="comment">#【可选】显示侧边栏 (默认 true)</span></span><br><span class="line"><span class="attr">swiper_index:</span> <span class="number">10</span> <span class="comment">#【可选】首页轮播图配置 index 索引，数字越小越靠前</span></span><br><span class="line"><span class="attr">top_group_index:</span> <span class="number">10</span> <span class="comment">#【可选】首页右侧卡片组配置, 数字越小越靠前</span></span><br><span class="line"><span class="attr">ai:</span> <span class="comment">#【可选】文章ai摘要</span></span><br><span class="line"><span class="attr">background:</span> <span class="string">&quot;#fff&quot;</span> <span class="comment">#【可选】文章主色，必须是16进制颜色且有6位，不可缩减，例如#ffffff 不可写成#fff</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="string">&lt;div</span> <span class="string">class=&quot;video-container&quot;&gt;</span></span><br><span class="line">[<span class="string">up主专用，视频内嵌代码贴在这</span>]</span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;style&gt;</span></span><br><span class="line"><span class="string">.video-container</span> &#123;</span><br><span class="line">    <span class="attr">position:</span> <span class="string">relative;</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">100</span><span class="string">%;</span></span><br><span class="line">    <span class="attr">padding-top:</span> <span class="number">56.25</span><span class="string">%;</span> <span class="string">/*</span> <span class="number">16</span><span class="string">:9</span> <span class="string">aspect</span> <span class="string">ratio</span> <span class="string">(height/width</span> <span class="string">=</span> <span class="number">9</span><span class="string">/16</span> <span class="string">*</span> <span class="number">100</span><span class="string">%)</span> <span class="string">*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">.video-container</span> <span class="string">iframe</span> &#123;</span><br><span class="line">    <span class="attr">position:</span> <span class="string">absolute;</span></span><br><span class="line">    <span class="attr">top:</span> <span class="number">0</span><span class="string">;</span></span><br><span class="line">    <span class="attr">left:</span> <span class="number">0</span><span class="string">;</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">100</span><span class="string">%;</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">100</span><span class="string">%;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure><ul><li>page.md模版，仅供参考</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125; <span class="comment">#【必需】页面标题</span></span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125; <span class="comment">#【必需】页面创建日期</span></span><br><span class="line"><span class="attr">type:</span> <span class="comment">#【必需】标签、分类、关于、音乐馆、友情链接、相册、相册详情、朋友圈、即刻页面需要配置</span></span><br><span class="line"><span class="attr">updated:</span> <span class="comment">#【可选】页面更新日期</span></span><br><span class="line"><span class="attr">comments:</span> <span class="comment">#【可选】显示页面评论模块(默认 true)</span></span><br><span class="line"><span class="attr">description:</span> <span class="comment">#【可选】页面描述</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="comment">#【可选】页面关键字</span></span><br><span class="line"><span class="attr">top_img:</span> <span class="string">https://img.090227.xyz/file/ae62475a131f3734a201c.png</span> <span class="comment">#【可选】页面顶部图片</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="comment">#【可选】显示 mathjax(当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</span></span><br><span class="line"><span class="attr">katex:</span> <span class="comment">#【可选】显示 katex(当设置 katex 的 per_page: false 时，才需要配置，默认 false)</span></span><br><span class="line"><span class="attr">aside:</span> <span class="comment">#【可选】显示侧边栏 (默认 true)</span></span><br><span class="line"><span class="attr">aplayer:</span> <span class="comment">#【可选】在需要的页面加载 aplayer 的 js 和 css,请参考文章下面的音乐 配置</span></span><br><span class="line"><span class="attr">highlight_shrink:</span> <span class="comment">#【可选】配置代码框是否展开(true/false)(默认为设置中 highlight_shrink 的配置)</span></span><br><span class="line"><span class="attr">top_single_background:</span> <span class="comment">#【可选】部分页面的顶部模块背景图片</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="三、-更多功能"><a href="#三、-更多功能" class="headerlink" title="三、 更多功能"></a>三、 更多功能</h2><ul><li><p>新建博文命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new 这是一篇新的博文</span><br></pre></td></tr></table></figure></li><li><p>新建标签页命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page 新建的标签页</span><br></pre></td></tr></table></figure></li><li><p>文章置顶</p><ul><li>安装插件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-topindex --save</span><br></pre></td></tr></table></figure><ul><li>设置置顶</li></ul><p>给需要置顶的文章加入top参数，如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  ---</span><br><span class="line">title: 每天一个linux命令</span><br><span class="line">date: 2017-01-23 11:41:48</span><br><span class="line">top: 1</span><br><span class="line">categories:</span><br><span class="line">- 运维</span><br><span class="line">tags:</span><br><span class="line">- linux命令</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>如果存在多个置顶文章，top后的参数越大，越靠前</p></li><li><p>开启本地搜索</p><p>你需要安装 hexo-generator-search，根据它的文档去做相应配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>设置主题配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">preload:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">CDN:</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建hexo博客（一）</title>
      <link href="/2025/09/23/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/"/>
      <url>/2025/09/23/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><ul><li>域名</li><li><a href="https://github.com/">github</a></li><li><a href="https://dash.cloudflare.com/">cloudfare</a></li></ul><h2 id="二、软件安装"><a href="#二、软件安装" class="headerlink" title="二、软件安装"></a>二、软件安装</h2><h3 id="1-Node"><a href="#1-Node" class="headerlink" title="1. Node"></a>1. Node</h3><p>1.1 打开Node官网，下载和自己系统相配的Node的安装程序，否则会出现安装问题。下载地址：<a href="https://nodejs.org/en">https://nodejs.org/en</a></p><p>1.2 下载后安装，安装的目录可以使用默认目录C:&#x2F;Program Files&#x2F;nodejs&#x2F;</p><p>1.3 安装完成后，检查是否安装成功。在键盘按下win + R键，输入CMD，然后回车，打开CMD窗口，执行node -v命令，看到版本信息，则说明安装成功。</p><p>1.4 修改npm源。npm下载各种模块，默认是从国处服务器下载，速度较慢，建议配置成华为云镜像源。打开CMD窗口，运行如下命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://mirrors.huaweicloud.com/repository/npm/</span><br></pre></td></tr></table></figure><h3 id="2-Git"><a href="#2-Git" class="headerlink" title="2. Git"></a>2. Git</h3><p>2.1 进入官网下载适合你当前系统的 Git：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p><p>2.2 下载后傻瓜式安装Git即可，安装的目录最好使用默认目录C:&#x2F;Program Files&#x2F;Git</p><p>2.3 点击电脑开始菜单即可看见Git CMD、Git Bash、Git GUI</p><ul><li>Git CMD 是windows 命令行的指令风格</li><li>Git Bash 是linux系统的指令风格（建议使用）</li><li>Git GUI是图形化界面（新手学习不建议使用）</li></ul><h3 id="3-配置-Git-密钥并连接至-Github"><a href="#3-配置-Git-密钥并连接至-Github" class="headerlink" title="3. 配置 Git 密钥并连接至 Github"></a>3. 配置 Git 密钥并连接至 Github</h3><p>常用 Git 命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config -l  //查看所有配置</span><br><span class="line">git config --system --list //查看系统配置</span><br><span class="line">git config --global --list //查看用户（全局）配置</span><br></pre></td></tr></table></figure><p>3.1. 配置用户名和邮箱</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>通过git config -l 检查是否配置成功。</p><p>3.2 配置公钥连接Github<br>3.2.1 执行以下命令生成ssh公钥，此公钥用于你的 计算机连接Github</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>提示Enter file in which to save the key直接一路回车即可，新手小白不推荐设置密钥<br>之后打开C盘下用户文件夹下的.ssh的文件夹，会看到以下文件</p><ul><li>id_rsa(私钥)</li><li>id_rsa.pub(公钥)<br>用记事本打开上述图片中的公钥id_rsa.pub，复制里面的内容，然后开始在github中配置ssh密钥。<br>3.2.2 将 SSH KEY 配置到 GitHub<br>进入github，点击右上角头像 选择settings，进入设置页后选择 SSH and GPG keys，名字随便起，公钥填到Key那一栏。<br>3.2.3 测试连接，输入以下命令</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>第一次连接会提示Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])?，输入yes即可<br>出现连接到账户的信息，说明已经大功告成，至此完成了环境准备工作。</p><p>3.3 创建GitHub.io仓库</p><p>3.3.1 点击右上角的+按钮，选择New repository，创建一个&lt;用户名&gt;.github.io的仓库。</p><p>3.3.2 仓库名字的格式必须为：&lt;用户名&gt;.github.io (注意：前缀必须为用户名，此为预览博客需要，后期可修改仓库名)</p><p>3.3.3 可见性必须选择 Public 方便第一次部署检查问题，点击 Creat repository 进行创建即可</p><h3 id="4-初始化-Hexo-博客"><a href="#4-初始化-Hexo-博客" class="headerlink" title="4. 初始化 Hexo 博客"></a>4. 初始化 Hexo 博客</h3><p>4.1 创建一个文件夹来保存博客源码（我这里选的路径为D:&#x2F;Blog），在文件夹内右键鼠标，选择Open Git Bash here</p><p>4.2 在Git BASH输入如下命令安装 Hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli &amp;&amp; hexo -v</span><br></pre></td></tr></table></figure><p>4.3 安装完后输入hexo -v验证是否安装成功。</p><p>4.4 初始化 Hexo 项目安装相关依赖。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog-demo</span><br><span class="line">cd blog-demo</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p>4.5 初始化项目后，blog-demo有如下结构：</p><ul><li>node_modules：依赖包</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>.npmignore：发布时忽略的文件（可忽略）</li><li>_config.landscape.yml：主题的配置文件</li><li>config.yml：博客的配置文件</li><li>package.json：项目名称、描述、版本、运行和开发等信</li></ul><p>4.6 输入以下命令启动项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>打开浏览器，输入地址：<a href="http://localhost:4000/">http://localhost:4000/</a> ，看到正常网页的效果，说明你的博客已经构建成功了。</p><h3 id="5-将静态博客挂载到-GitHub-Pages"><a href="#5-将静态博客挂载到-GitHub-Pages" class="headerlink" title="5. 将静态博客挂载到 GitHub Pages"></a>5. 将静态博客挂载到 GitHub Pages</h3><p>5.1 安装 hexo-deployer-git</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>5.2 修改_config.yml文件<br>在blog-demo目录下的_config.yml，就是整个Hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的配置描述。<br>修改最后一行的配置，将repository修改为你自己的github项目地址即可，还有分支要改为main代表主分支（注意缩进）。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:xuhxjx/xuhxjx.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>5.3 修改好配置后，运行如下命令，将代码部署到 GitHub（Hexo三连）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// Git BASH终端</span><br><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy  </span><br></pre></td></tr></table></figure><p> 或者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// VSCODE终端</span><br><span class="line">hexo cl; hexo g; hexo d</span><br></pre></td></tr></table></figure><p><span style="color:#008000">说明：</span></p><ul><li>hexo clean：删除之前生成的文件，可以用hexo cl缩写。</li><li>hexo generate：生成静态文章，可以用hexo g缩写</li><li>hexo deploy：部署文章，可以用hexo d缩写</li></ul><p>注意：deploy时可能要你输入 username 和 password。</p><p>如果出现Deploy done，则说明部署成功了。</p><h3 id="6-将静态博客挂载到-Cloudflare-Pages"><a href="#6-将静态博客挂载到-Cloudflare-Pages" class="headerlink" title="6.将静态博客挂载到 Cloudflare Pages"></a>6.将静态博客挂载到 Cloudflare Pages</h3><p>6.1 在 Workers 和 Pages 中选择 Pages 的 连接到 Git</p><p>6.2 然后登录你Blog仓库对应的GitHub帐号</p><p>6.3 点击保存并部署后等待部署完成即可。</p><h3 id="7-命令说明"><a href="#7-命令说明" class="headerlink" title="7. 命令说明"></a>7. 命令说明</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hexo generate        # 生成静态文件</span><br><span class="line"></span><br><span class="line">hexo deploy          # 部署至远程仓库</span><br><span class="line"></span><br><span class="line">git add .            # 添加所有更改到本地 git</span><br><span class="line"></span><br><span class="line">git commit -m &quot;update&quot;   # 描述本次更改</span><br><span class="line"></span><br><span class="line">git push origin main     # 推送到远程仓库</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Claw搭建哪吒面板</title>
      <link href="/2025/09/23/2025.09.09_claw%E6%90%AD%E5%BB%BA%E5%93%AA%E5%90%92%E9%9D%A2%E6%9D%BF/"/>
      <url>/2025/09/23/2025.09.09_claw%E6%90%AD%E5%BB%BA%E5%93%AA%E5%90%92%E9%9D%A2%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h3 id="1-哪吒项目地址："><a href="#1-哪吒项目地址：" class="headerlink" title="1. 哪吒项目地址："></a>1. 哪吒项目地址：</h3><p>github公库：<a href="https://github.com/nezhahq/nezha">https://github.com/nezhahq/nezha</a><br>github镜像：<a href="https://github.com/nezhahq/nezha/pkgs/container/nezha">https://github.com/nezhahq/nezha/pkgs/container/nezha</a></p><h3 id="2-创建面板容器步骤："><a href="#2-创建面板容器步骤：" class="headerlink" title="2. 创建面板容器步骤："></a>2. 创建面板容器步骤：</h3><p>2.1 在<a href="https://eu-central-1.run.claw.cloud/" title="claw">爪云</a>，用&gt;180天的github帐号登陆<br>2.2 选择合适的地区后，进入 App Launchpad &gt; Create App<br>2.3 填写配置参数：  </p><ul><li><p>Application name:<br>nazhamb</p></li><li><p>Imgage name:<br>ghcr.io&#x2F;nezhahq&#x2F;nezha:v1.13.2</p></li><li><p>Network:<br>端口：8080<br>自定义域名：nz.363689.xyz</p></li><li><p>Local Storage:  </p><ul><li>点add</li><li>Capacity：<br>1或2</li><li>Mount Path：<br>&#x2F;dashboard&#x2F;data</li></ul></li></ul><p><em>2.4启动部署，等状态为 Running 即可</em></p><h3 id="3-配置反向代理容器"><a href="#3-配置反向代理容器" class="headerlink" title="3. 配置反向代理容器"></a>3. 配置反向代理容器</h3><ul><li><p>Application name:<br>nazhafd</p></li><li><p>Imgage name:<br>nginx(默认)</p></li><li><p>Network:<br>端口：80<br>协议：grpcs:&#x2F;&#x2F;<br>自定义域名：fd.363689.xyz</p></li><li><p>Configmaps:</p><ul><li><p>点add  </p></li><li><p>File Name：<br>&#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;default.conf</p></li><li><p>File content：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">upstream dashboard &#123;</span><br><span class="line">    server nzmb.ns-api32p0p.svc.cluster.local:8008;</span><br><span class="line">    keepalive 512;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80 http2;</span><br><span class="line">    server_name nzmb.ns-api32p0p.svc.cluster.local;</span><br><span class="line"></span><br><span class="line">    underscores_in_headers on;</span><br><span class="line"></span><br><span class="line">    location ^~ /proto.NezhaService/ &#123;</span><br><span class="line">        grpc_set_header Host $host;</span><br><span class="line">        grpc_set_header nz-realip $remote_addr;</span><br><span class="line">        grpc_read_timeout 600s;</span><br><span class="line">        grpc_send_timeout 600s;</span><br><span class="line">        grpc_socket_keepalive on;</span><br><span class="line">        client_max_body_size 10m;</span><br><span class="line">        grpc_buffer_size 4m;</span><br><span class="line">        grpc_pass grpc://dashboard;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><span style="color:red">注意：ns-api32p0p.svc.cluster.local为面板的Private Address里的地址，并去掉https:&#x2F;&#x2F;，此处有两个要修改</span></p></li></ul></li></ul><h3 id="4-配置哪吒面板："><a href="#4-配置哪吒面板：" class="headerlink" title="4. 配置哪吒面板："></a>4. 配置哪吒面板：</h3><p>当上面两容器部署完正常runing并自定义域名设置好后就可以打开哪吒面板了如：<a href="https://nz.363689.xyz/">https://nz.363689.xyz</a><br>4.1 修改密码：<br>管理后台，个人信息，更新个人资料<br>4.2 Agent对接地址:<br>在系统设置中Agent对接地址:<br>nf.363689.xyz:80<br>4.3 自定义代码（样式和脚本）  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- ↓↓↓↓ 最终配置，集成了新功能 ↓↓↓↓ --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Part 1: Your existing frontend JavaScript settings --&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  // 1. 自定义桌面和手机背景图</span><br><span class="line">  window.CustomBackgroundImage = &quot;https://cdn.jsdelivr.net/gh/xuhxjx/myimg@main/wallpaper_1.jpg&quot;;</span><br><span class="line">  window.CustomMobileBackgroundImage = &quot;https://cdn.jsdelivr.net/gh/xuhxjx/myimg@main/IMG_5251.JPG&quot;;</span><br><span class="line"></span><br><span class="line">  // 2. 自定义 Logo</span><br><span class="line">  window.CustomLogo = &quot;https://cdn.jsdelivr.net/gh/xuhxjx/myimg@main/logo.png&quot;;</span><br><span class="line"></span><br><span class="line">  // 3. 自定义描述文字</span><br><span class="line">  window.CustomDesc = &quot;服务器状态监控面板&quot;;</span><br><span class="line"></span><br><span class="line">  // 4. 隐藏默认的动画小人插图</span><br><span class="line">  window.DisableAnimatedMan = true;</span><br><span class="line"></span><br><span class="line">  // 5. 强制使用暗色主题</span><br><span class="line">  window.ForceTheme = &quot;dark&quot;;</span><br><span class="line"></span><br><span class="line">  // 6. 开启强制使用 SVG 旗帜</span><br><span class="line">  window.ForceUseSvgFlag = true;</span><br><span class="line"></span><br><span class="line">  // --- V1 新增功能 ---</span><br><span class="line">  </span><br><span class="line">  // 7. 在卡片上显示实时上下行流量</span><br><span class="line">  window.ShowNetTransfer = true;</span><br><span class="line"></span><br><span class="line">  // 8. 强制显示世界地图</span><br><span class="line">  window.ForceShowMap = false;</span><br><span class="line"></span><br><span class="line">  // 9. 在手机视图下固定顶部服务器名称</span><br><span class="line">  window.FixedTopServerName = true;</span><br><span class="line"></span><br><span class="line">  // 10. 添加自定义外部链接 (请自行修改链接和名称)</span><br><span class="line">  window.CustomLinks = &#x27;[&#123;\&quot;link\&quot;:\&quot;https://www.google.com\&quot;,\&quot;name\&quot;:\&quot;谷歌搜索\&quot;&#125;,&#123;\&quot;link\&quot;:\&quot;https://github.com\&quot;,\&quot;name\&quot;:\&quot;GitHub\&quot;&#125;]&#x27;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- ↑↑↑↑  以上为所有有效配置 ↑↑↑↑ --&gt;</span><br></pre></td></tr></table></figure><p>4.4 哪吒扎针<br>在后台”安装命令”选择”linux”就自动复制命令了。如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/nezhahq/scripts/main/agent/install.sh -o agent.sh &amp;&amp; chmod +x agent.sh &amp;&amp; env NZ_SERVER=nf.363689.xyz:80 NZ_TLS=false NZ_CLIENT_SECRET=IW0S5ke8JHvHoLF2EsCp5cpJcmwlc7TD ./agent.sh</span><br></pre></td></tr></table></figure><p>在vps上扎针吧！</p><h3 id="5-配置面板服务器显示"><a href="#5-配置面板服务器显示" class="headerlink" title="5. 配置面板服务器显示"></a>5. 配置面板服务器显示</h3><p>哪吒面板后台，编辑服务器<br>公开备注：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;billingDataMod&quot;: &#123;</span><br><span class="line">    &quot;startDate&quot;: &quot;2025-07-08T12:58:17.636Z&quot;,</span><br><span class="line">    &quot;endDate&quot;: &quot;2099-07-08T12:58:17.636Z&quot;,</span><br><span class="line">    &quot;autoRenewal&quot;: &quot;1&quot;,</span><br><span class="line">    &quot;cycle&quot;: &quot;Month&quot;,</span><br><span class="line">    &quot;amount&quot;: &quot;Free&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;planDataMod&quot;: &#123;</span><br><span class="line">    &quot;bandwidth&quot;: &quot;30Mbps&quot;,</span><br><span class="line">    &quot;trafficVol&quot;: &quot;1TB/Month&quot;,</span><br><span class="line">    &quot;trafficType&quot;: &quot;2&quot;,</span><br><span class="line">    &quot;IPv4&quot;: &quot;0&quot;,</span><br><span class="line">    &quot;IPv6&quot;: &quot;1&quot;,</span><br><span class="line">    &quot;networkRoute&quot;: &quot;BGP&quot;,</span><br><span class="line">    &quot;extra&quot;: &quot;洛杉矶&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-配置面板通知"><a href="#6-配置面板通知" class="headerlink" title="6. 配置面板通知"></a>6. 配置面板通知</h3><p>6.1 编辑通知</p><ul><li>名称：telegram</li><li>url：<a href="https://api.telegram.org/bot">https://api.telegram.org/bot</a><span style="color:red">8047792960:AAEH3GeVLSr3A0VMf-ndgm74tseIj_6iccg</span>&#x2F;sendMessage?chat_id&#x3D;7571093178&amp;text&#x3D;#NEZHA#</li><li>名称：电报通知</li><li>其它默认</li></ul><p><em>6.2 编辑分组</em><br>   编辑通知分组：</p><ul><li>名称：电报通知</li><li>通知：telegram</li></ul><h3 id="7-警报规则"><a href="#7-警报规则" class="headerlink" title="7. 警报规则"></a>7. 警报规则</h3><p>编辑报警规则  </p><h5 id="7-1-离线通知"><a href="#7-1-离线通知" class="headerlink" title="7.1 离线通知"></a>7.1 离线通知</h5><ul><li>名称：离线通知</li><li>规则：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#123;&quot;type&quot;:&quot;offline&quot;,&quot;duration&quot;:10,&quot;cover&quot;:0&#125;]</span><br></pre></td></tr></table></figure><ul><li>通知组：电报通知</li><li>触发模式：总是</li><li><input checked="" disabled="" type="checkbox"> 启用</li></ul><h5 id="7-2-CPU-内存"><a href="#7-2-CPU-内存" class="headerlink" title="7.2 CPU+内存"></a>7.2 CPU+内存</h5><ul><li>名称：CPU+内存</li><li>规则：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#123;&quot;type&quot;:&quot;cpu&quot;,&quot;max&quot;:50,&quot;duration&quot;:10,&quot;cover&quot;:0&#125;,&#123;&quot;type&quot;:&quot;memory&quot;,&quot;min&quot;:20,&quot;duration&quot;:20,&quot;cover&quot;:0&#125;]</span><br></pre></td></tr></table></figure><ul><li>通知组：电报通知</li><li>触发模式：总是</li><li><input checked="" disabled="" type="checkbox"> 启用</li></ul><h5 id="7-3-200G双向流量超限通知"><a href="#7-3-200G双向流量超限通知" class="headerlink" title="7.3 200G双向流量超限通知"></a>7.3 200G双向流量超限通知</h5><ul><li>名称：200G双向流量超限通知</li><li>规则：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;type&quot;: &quot;transfer_all_cycle&quot;,</span><br><span class="line">    &quot;max&quot;: 214748364800,</span><br><span class="line">    &quot;cycle_start&quot;: &quot;2025-09-01T00:00:00+08:00&quot;,</span><br><span class="line">    &quot;cycle_interval&quot;: 1,</span><br><span class="line">    &quot;cycle_unit&quot;: &quot;month&quot;,</span><br><span class="line">    &quot;cover&quot;: 1,</span><br><span class="line">    &quot;ignore&quot;: &#123;&quot;5&quot;: true, &quot;6&quot;: true, &quot;7&quot;: true, &quot;8&quot;: true&#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>通知组：电报通知</li><li>触发模式：总是</li><li><input checked="" disabled="" type="checkbox"> 启用</li></ul><h5 id="7-4-200G单向流量超限通知"><a href="#7-4-200G单向流量超限通知" class="headerlink" title="7.4 200G单向流量超限通知"></a>7.4 200G单向流量超限通知</h5><ul><li>名称：200G单向流量超限通知</li><li>规则：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;type&quot;: &quot;transfer_out_cycle&quot;,</span><br><span class="line">    &quot;max&quot;: 214748364800,</span><br><span class="line">    &quot;cycle_start&quot;: &quot;2025-09-01T00:00:00+08:00&quot;,</span><br><span class="line">    &quot;cycle_interval&quot;: 1,</span><br><span class="line">    &quot;cycle_unit&quot;: &quot;month&quot;,</span><br><span class="line">    &quot;cover&quot;: 1,</span><br><span class="line">    &quot;ignore&quot;: &#123;&quot;1&quot;: true&#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>通知组：电报通知</li><li>触发模式：总是</li><li><input checked="" disabled="" type="checkbox"> 启用</li></ul><h5 id="7-4-500G单向流量超限通知"><a href="#7-4-500G单向流量超限通知" class="headerlink" title="7.4 500G单向流量超限通知"></a>7.4 500G单向流量超限通知</h5><ul><li>名称：500G单向流量超限通知</li><li>规则：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;type&quot;: &quot;transfer_out_cycle&quot;,</span><br><span class="line">    &quot;max&quot;: 536870912000,</span><br><span class="line">    &quot;cycle_start&quot;: &quot;2025-09-01T00:00:00+08:00&quot;,</span><br><span class="line">    &quot;cycle_interval&quot;: 1,</span><br><span class="line">    &quot;cycle_unit&quot;: &quot;month&quot;,</span><br><span class="line">    &quot;cover&quot;: 1,</span><br><span class="line">    &quot;ignore&quot;: &#123;&quot;10&quot;: true&#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>通知组：电报通知</li><li>触发模式：总是</li><li><input checked="" disabled="" type="checkbox"> 启用</li></ul><h5 id="7-5-1TB双向流量超限通知"><a href="#7-5-1TB双向流量超限通知" class="headerlink" title="7.5 1TB双向流量超限通知"></a>7.5 1TB双向流量超限通知</h5><ul><li>名称：1TB双向流量超限通知</li><li>规则：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;type&quot;: &quot;transfer_all_cycle&quot;,</span><br><span class="line">    &quot;max&quot;: 1099511627776,</span><br><span class="line">    &quot;cycle_start&quot;: &quot;2025-09-01T00:00:00+08:00&quot;,</span><br><span class="line">    &quot;cycle_interval&quot;: 1,</span><br><span class="line">    &quot;cycle_unit&quot;: &quot;month&quot;,</span><br><span class="line">    &quot;cover&quot;: 1,</span><br><span class="line">    &quot;ignore&quot;: &#123;&quot;9&quot;: true&#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>通知组：电报通知</li><li>触发模式：总是</li><li><input checked="" disabled="" type="checkbox"> 启用</li></ul><h3 id="8-服务"><a href="#8-服务" class="headerlink" title="8. 服务"></a>8. 服务</h3><p>8.1 电信</p><ul><li>名称：电信-湖南</li><li>目标：113.240.117.108:80</li><li>类型：TCPing</li><li>间隔：60</li><li>最大延迟时间：350</li></ul><p>8.2 移动</p><ul><li>名称：移动-北京</li><li>目标：222.35.73.1:80</li><li>类型：TCPing</li><li>间隔：60</li><li>最大延迟时间：350</li></ul><p>8.3 联通</p><ul><li>名称：联通-广东</li><li>目标：112.90.211.100:80</li><li>类型：TCPing</li><li>间隔：60</li><li>最大延迟时间：350</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>纯ipv6的vps用docker-compose.yml部署双面板和openlist</title>
      <link href="/2025/09/23/2025.09.15_%E7%BA%AFipv6%E7%9A%84vps%E7%94%A8docker-compose-yml%E9%83%A8%E7%BD%B2%E7%94%A8%E5%8F%8C%E9%9D%A2%E6%9D%BF/"/>
      <url>/2025/09/23/2025.09.15_%E7%BA%AFipv6%E7%9A%84vps%E7%94%A8docker-compose-yml%E9%83%A8%E7%BD%B2%E7%94%A8%E5%8F%8C%E9%9D%A2%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><h4 id="1-一台VPS：确保您可以通过-SSH-正常登录，内存-512"><a href="#1-一台VPS：确保您可以通过-SSH-正常登录，内存-512" class="headerlink" title="1. 一台VPS：确保您可以通过 SSH 正常登录，内存&gt;512"></a>1. 一台VPS：确保您可以通过 SSH 正常登录，内存&gt;512</h4><h4 id="2-一个域名：并且必须将这个域名的-DNS-管理权交给-Cloudflare"><a href="#2-一个域名：并且必须将这个域名的-DNS-管理权交给-Cloudflare" class="headerlink" title="2. 一个域名：并且必须将这个域名的 DNS 管理权交给 Cloudflare"></a>2. 一个域名：并且必须将这个域名的 DNS 管理权交给 Cloudflare</h4><h2 id="二、安装-Docker-和-Docker-Compose-运行环境"><a href="#二、安装-Docker-和-Docker-Compose-运行环境" class="headerlink" title="二、安装 Docker 和 Docker Compose (运行环境)"></a>二、安装 Docker 和 Docker Compose (运行环境)</h2><p>在安装面板之前，我们需要先在您的 NAT VPS 上安装 Docker 运行环境</p><h4 id="1-SSH-登录到您的-NAT-VPS"><a href="#1-SSH-登录到您的-NAT-VPS" class="headerlink" title="1. SSH 登录到您的 NAT VPS"></a>1. SSH 登录到您的 NAT VPS</h4><h4 id="2-安装-nano-对于-Debian-Ubuntu-系统-最常见-，只需要执行一行命令来安装它："><a href="#2-安装-nano-对于-Debian-Ubuntu-系统-最常见-，只需要执行一行命令来安装它：" class="headerlink" title="2. 安装 nano 对于 Debian &#x2F; Ubuntu 系统 (最常见)，只需要执行一行命令来安装它："></a>2. 安装 nano 对于 Debian &#x2F; Ubuntu 系统 (最常见)，只需要执行一行命令来安装它：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y nano</span><br></pre></td></tr></table></figure><h4 id="3-执行-Docker-官方一键安装脚本"><a href="#3-执行-Docker-官方一键安装脚本" class="headerlink" title="3. 执行 Docker 官方一键安装脚本:"></a>3. 执行 Docker 官方一键安装脚本:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line"><span class="built_in">sudo</span> sh get-docker.sh</span><br></pre></td></tr></table></figure><p>这个脚本会自动检测您的系统，并安装最新版本的 Docker Engine 和 Docker Compose 插件</p><h4 id="4-验证安装："><a href="#4-验证安装：" class="headerlink" title="4. 验证安装："></a>4. 验证安装：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose version</span><br></pre></td></tr></table></figure><p>如果您能看到版本号输出而没有报错，说明安装成功</p><h2 id="三、安装并配置Komari、nezha双面板与openlist"><a href="#三、安装并配置Komari、nezha双面板与openlist" class="headerlink" title="三、安装并配置Komari、nezha双面板与openlist"></a>三、安装并配置Komari、nezha双面板与openlist</h2><h4 id="1-两种方式配置安装"><a href="#1-两种方式配置安装" class="headerlink" title="1. 两种方式配置安装"></a>1. 两种方式配置安装</h4><h4 id="1-1-一键生成docker-compose-yml"><a href="#1-1-一键生成docker-compose-yml" class="headerlink" title="1.1 一键生成docker-compose.yml"></a>1.1 一键生成docker-compose.yml</h4><p>文件为了避免任何格式错误，请完整复制下面这个灰色代码框里的所有内容，将您的个人信息替换进去，然后一次性粘贴到您的SSH终端中，按回车键</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; docker-compose.yml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  # Komari 面板服务</span></span><br><span class="line"><span class="string">  komari:</span></span><br><span class="line"><span class="string">    container_name: komari</span></span><br><span class="line"><span class="string">    image: ghcr.io/komari-monitor/komari:latest</span></span><br><span class="line"><span class="string">    network_mode: &quot;host&quot;</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./komari_data:/app/data</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - TZ=Asia/Shanghai</span></span><br><span class="line"><span class="string">      - ADMIN_USERNAME=帐号</span></span><br><span class="line"><span class="string">      - ADMIN_PASSWORD=密码</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  # 哪吒面板服务</span></span><br><span class="line"><span class="string">  nezha:</span></span><br><span class="line"><span class="string">    container_name: nezha</span></span><br><span class="line"><span class="string">    image: ghcr.io/nezhahq/nezha:latest</span></span><br><span class="line"><span class="string">    network_mode: &quot;host&quot;</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./nezha_data:/dashboard/data</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">    # 如果需要配置环境变量，请在这里添加</span></span><br><span class="line"><span class="string">    # environment:</span></span><br><span class="line"><span class="string">    #   - NZ_HOST=域名</span></span><br><span class="line"><span class="string">    #   - NZ_TLS=0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  # openlist服务</span></span><br><span class="line"><span class="string">  openlist:</span></span><br><span class="line"><span class="string">    container_name: openlist</span></span><br><span class="line"><span class="string">    image: openlistteam/openlist:latest</span></span><br><span class="line"><span class="string">    network_mode: &quot;host&quot;</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - TZ=Asia/Shanghai</span></span><br><span class="line"><span class="string">      - OPENLIST_ADMIN_PASSWORD=密码</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./oplist_data:/opt/openlist/data</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string"># 这里不再需要 volumes: 部分，因为你只用了绑定挂载</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h4 id="1-2-输入以下命令来打开-docker-compose-yml-文件"><a href="#1-2-输入以下命令来打开-docker-compose-yml-文件" class="headerlink" title="1.2 输入以下命令来打开 docker-compose.yml 文件"></a>1.2 输入以下命令来打开 docker-compose.yml 文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p>粘贴以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  <span class="comment"># Komari 面板服务</span></span><br><span class="line">  komari:</span><br><span class="line">    container_name: komari</span><br><span class="line">    image: ghcr.io/komari-monitor/komari:latest</span><br><span class="line">    network_mode: <span class="string">&quot;host&quot;</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./komari_data:/app/data</span><br><span class="line">    environment:</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">      - ADMIN_USERNAME=帐号</span><br><span class="line">      - ADMIN_PASSWORD=密码</span><br><span class="line">    restart: unless-stopped</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 哪吒面板服务</span></span><br><span class="line">  nezha:</span><br><span class="line">    container_name: nezha</span><br><span class="line">    image: ghcr.io/nezhahq/nezha:latest</span><br><span class="line">    network_mode: <span class="string">&quot;host&quot;</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./nezha_data:/dashboard/data</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    <span class="comment"># 如果需要配置环境变量，请在这里添加</span></span><br><span class="line">    <span class="comment"># environment:</span></span><br><span class="line">    <span class="comment">#   - NZ_HOST=ne.363689.xyz</span></span><br><span class="line">    <span class="comment">#   - NZ_TLS=0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># openlist服务</span></span><br><span class="line">  openlist:</span><br><span class="line">    container_name: openlist</span><br><span class="line">    image: openlistteam/openlist:latest</span><br><span class="line">    network_mode: <span class="string">&quot;host&quot;</span></span><br><span class="line">    environment:</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">      - OPENLIST_ADMIN_PASSWORD=密码</span><br><span class="line">    volumes:</span><br><span class="line">      - ./oplist_data:/opt/openlist/data</span><br><span class="line">    restart: unless-stopped</span><br><span class="line"><span class="comment"># 这里不再需要 volumes: 部分，因为你只用了绑定挂载</span></span><br></pre></td></tr></table></figure><p>清空旧内容: 使用键盘上的方向键移动光标到文件开头，然后连续按 Ctrl + K 来剪切（删除）整行，直到文件变为空白</p><p>保存: 按下 Ctrl + O（不是零），然后按 Enter 键确认文件名。</p><p>退出: 按下 Ctrl + X 退出 nano 编辑器</p><h4 id="1-3-设置-oplist-data文件夹的权限，确保-Openlist-容器可以正常读写"><a href="#1-3-设置-oplist-data文件夹的权限，确保-Openlist-容器可以正常读写" class="headerlink" title="1.3 设置.&#x2F;oplist_data文件夹的权限，确保 Openlist 容器可以正常读写"></a>1.3 设置.&#x2F;oplist_data文件夹的权限，确保 Openlist 容器可以正常读写</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> -R 1001:1001 ./oplist_data</span><br></pre></td></tr></table></figure><h4 id="1-4-启动面板服务"><a href="#1-4-启动面板服务" class="headerlink" title="1.4 启动面板服务"></a>1.4 启动面板服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure><h4 id="1-5-补充监控自动拉取更新的方法"><a href="#1-5-补充监控自动拉取更新的方法" class="headerlink" title="1.5 补充监控自动拉取更新的方法"></a>1.5 补充监控自动拉取更新的方法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  <span class="comment"># Komari 面板服务</span></span><br><span class="line">  komari:</span><br><span class="line">    container_name: komari</span><br><span class="line">    image: ghcr.io/komari-monitor/komari:latest</span><br><span class="line">    network_mode: <span class="string">&quot;host&quot;</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./komari_data:/app/data</span><br><span class="line">    environment:</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">      - ADMIN_USERNAME=帐号</span><br><span class="line">      - ADMIN_PASSWORD=密码</span><br><span class="line">    restart: unless-stopped</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 哪吒面板服务</span></span><br><span class="line">  nezha:</span><br><span class="line">    container_name: nezha</span><br><span class="line">    image: ghcr.io/nezhahq/nezha:latest</span><br><span class="line">    network_mode: <span class="string">&quot;host&quot;</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./nezha_data:/dashboard/data</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    <span class="comment"># 如果需要配置环境变量，请在这里添加</span></span><br><span class="line">    <span class="comment"># environment:</span></span><br><span class="line">    <span class="comment">#   - NZ_HOST=域名</span></span><br><span class="line">    <span class="comment">#   - NZ_TLS=0</span></span><br><span class="line"></span><br><span class="line">  watchtower:</span><br><span class="line">    <span class="comment"># 默认监控全部容器</span></span><br><span class="line">    image: containrrr/watchtower:latest</span><br><span class="line">    container_name: watchtower</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">      - WATCHTOWER_INTERVAL=3600</span><br><span class="line">      <span class="comment"># - WATCHTOWER_SCHEDULE=0 0 6 * * * # cron方式</span></span><br><span class="line">    network_mode: host</span><br><span class="line">    volumes:</span><br><span class="line">      - /var/run/docker.sock:/var/run/docker.sock</span><br></pre></td></tr></table></figure><h2 id="四、通过回源方式访问面板"><a href="#四、通过回源方式访问面板" class="headerlink" title="四、通过回源方式访问面板"></a>四、通过回源方式访问面板</h2><p>具体方法参考openlist的设置方法</p><h4 id="1-域名dns添加AAAA记录"><a href="#1-域名dns添加AAAA记录" class="headerlink" title="1.域名dns添加AAAA记录"></a>1.域名dns添加AAAA记录</h4><h4 id="2-创建规则"><a href="#2-创建规则" class="headerlink" title="2.创建规则"></a>2.创建规则</h4><h5 id="2-1-规则名称"><a href="#2-1-规则名称" class="headerlink" title="2.1 规则名称"></a>2.1 规则名称</h5><h5 id="2-2-当传入请求匹配时"><a href="#2-2-当传入请求匹配时" class="headerlink" title="2.2 当传入请求匹配时"></a>2.2 当传入请求匹配时</h5><table><thead><tr><th>字段</th><th>运算符</th><th>值</th></tr></thead><tbody><tr><td>主机名</td><td>等于</td><td>域名</td></tr></tbody></table><h5 id="2-3目标端口重写到"><a href="#2-3目标端口重写到" class="headerlink" title="2.3目标端口重写到"></a>2.3目标端口重写到</h5><p>8008(nazhe)</p><p>25774(komari)</p><p>2544(openlist)</p><h2 id="五、部署成功后备份、恢复、删除数据"><a href="#五、部署成功后备份、恢复、删除数据" class="headerlink" title="五、部署成功后备份、恢复、删除数据"></a>五、部署成功后备份、恢复、删除数据</h2><h4 id="1、备份数据"><a href="#1、备份数据" class="headerlink" title="1、备份数据"></a>1、备份数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r ./nezha_data ./nezha_data_backup</span><br></pre></td></tr></table></figure><h4 id="2-恢复数据"><a href="#2-恢复数据" class="headerlink" title="2. 恢复数据"></a>2. 恢复数据</h4><h5 id="2-1-停止服务："><a href="#2-1-停止服务：" class="headerlink" title="2.1 停止服务："></a>2.1 停止服务：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose down</span><br></pre></td></tr></table></figure><h5 id="2-2-恢复文件："><a href="#2-2-恢复文件：" class="headerlink" title="2.2 恢复文件："></a>2.2 恢复文件：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r ./nezha_data_backup/. ./nezha_data/</span><br></pre></td></tr></table></figure><p>最后的 &#x2F;. 是为了确保所有内容（包括隐藏文件）都被复制</p><h5 id="2-3-启动服务"><a href="#2-3-启动服务" class="headerlink" title="2.3 启动服务:"></a>2.3 启动服务:</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure><h4 id="3-删除数据"><a href="#3-删除数据" class="headerlink" title="3. 删除数据"></a>3. 删除数据</h4><h5 id="3-1-停止服务："><a href="#3-1-停止服务：" class="headerlink" title="3.1 停止服务："></a>3.1 停止服务：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose down</span><br></pre></td></tr></table></figure><h5 id="3-2-删除命令"><a href="#3-2-删除命令" class="headerlink" title="3.2 删除命令"></a>3.2 删除命令</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -r ./nezha_data</span><br></pre></td></tr></table></figure><p>rm -r 是一个不可逆的操作，请务必确认你备份了数据再执行</p><h4 id="4-转移数据"><a href="#4-转移数据" class="headerlink" title="4. 转移数据"></a>4. 转移数据</h4><h5 id="4-1-在旧服务器上备份"><a href="#4-1-在旧服务器上备份" class="headerlink" title="4.1 在旧服务器上备份"></a>4.1 在旧服务器上备份</h5><p>首先，在新旧服务器上都停止哪吒面板的服务，避免数据冲突</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose down</span><br></pre></td></tr></table></figure><p>在旧服务器上，进入 docker-compose.yml 所在的目录，将 nezha_data 文件夹打包成一个压缩文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -czvf nezha_data_backup.tar.gz ./nezha_data</span><br></pre></td></tr></table></figure><p>tar -czvf：这是一个打包和压缩命令，将文件夹打包成 .tar.gz 文件</p><h5 id="4-2-将备份文件传输到本地"><a href="#4-2-将备份文件传输到本地" class="headerlink" title="4.2 将备份文件传输到本地"></a>4.2 将备份文件传输到本地</h5><p>使用 scp 命令来传输文件。在你的本地电脑上打开终端，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp root@&lt;旧服务器IP&gt;:/path/to/nezha_data_backup.tar.gz .</span><br></pre></td></tr></table></figure><ul><li><p>&lt;旧服务器IP&gt;：替换成你旧服务器的 IP 地址。</p></li><li><p>&#x2F;path&#x2F;to&#x2F;：替换成 nezha_data_backup.tar.gz 文件在旧服务器上的路径。</p></li></ul><h5 id="4-3-将备份文件上传到新服务器"><a href="#4-3-将备份文件上传到新服务器" class="headerlink" title="4.3 将备份文件上传到新服务器"></a>4.3 将备份文件上传到新服务器</h5><p>在你的本地电脑上打开终端，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp ./nezha_data_backup.tar.gz root@&lt;新服务器IP&gt;:/path/to/</span><br></pre></td></tr></table></figure><h5 id="4-4-在新服务器上恢复"><a href="#4-4-在新服务器上恢复" class="headerlink" title="4.4 在新服务器上恢复"></a>4.4 在新服务器上恢复</h5><p>进入你上传 nezha_data_backup.tar.gz 文件的目录。</p><p>解压缩文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf nezha_data_backup.tar.gz</span><br></pre></td></tr></table></figure><p>确保 nezha_data 文件夹的内容已经正确解压到 docker-compose.yml 文件所在的目录</p><p>重启服务</p><h4 id="5-使用-pwd-和-ls-命令查看文件"><a href="#5-使用-pwd-和-ls-命令查看文件" class="headerlink" title="5. 使用 pwd 和 ls 命令查看文件"></a>5. 使用 pwd 和 ls 命令查看文件</h4><h5 id="5-1-pwd：查看当前目录路径"><a href="#5-1-pwd：查看当前目录路径" class="headerlink" title="5.1 pwd：查看当前目录路径"></a>5.1 pwd：查看当前目录路径</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span></span><br></pre></td></tr></table></figure><p>pwd (Print Working Directory) 命令用于显示你当前所在的目录的完整路径。</p><h5 id="5-2-ls：查看当前目录文件"><a href="#5-2-ls：查看当前目录文件" class="headerlink" title="5.2 ls：查看当前目录文件"></a>5.2 ls：查看当前目录文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -l</span><br></pre></td></tr></table></figure><p>-l 参数会显示文件的详细信息，包括权限、所有者、大小和修改日期</p><h5 id="5-3-find：查找文件路径"><a href="#5-3-find：查找文件路径" class="headerlink" title="5.3 find：查找文件路径"></a>5.3 find：查找文件路径</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name <span class="string">&quot;your_file_name&quot;</span></span><br></pre></td></tr></table></figure><p>&#x2F;：表示从根目录开始搜索。</p><p>“your_file_name”：替换成你想要查找的实际文件名。</p><h2 id="六、更新镜像"><a href="#六、更新镜像" class="headerlink" title="六、更新镜像"></a>六、更新镜像</h2><h4 id="1-拉取最新镜像"><a href="#1-拉取最新镜像" class="headerlink" title="1 拉取最新镜像"></a>1 拉取最新镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nezhahq/nezha:latest</span><br></pre></td></tr></table></figure><h4 id="2-重新创建容器"><a href="#2-重新创建容器" class="headerlink" title="2. 重新创建容器"></a>2. 重新创建容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose up -d --force-recreate</span><br></pre></td></tr></table></figure><ul><li><p>docker compose up -d 会在后台启动你的服务。</p></li><li><p>–force-recreate 会强制 Docker 重新创建容器，即使容器的配置没有改变。这确保了你的服务会使用刚刚拉取的最新镜像</p></li></ul><h2 id="七、哪吒面板设置"><a href="#七、哪吒面板设置" class="headerlink" title="七、哪吒面板设置"></a>七、哪吒面板设置</h2><h4 id="1-修改面板密码"><a href="#1-修改面板密码" class="headerlink" title="1. 修改面板密码"></a>1. 修改面板密码</h4><h4 id="2-Agent对接地址【域名-IP-端口】"><a href="#2-Agent对接地址【域名-IP-端口】" class="headerlink" title="2. Agent对接地址【域名&#x2F;IP:端口】"></a>2. Agent对接地址【域名&#x2F;IP:端口】</h4><p>如：[2a14:67c1:a070:2::71]:8008</p><h2 id="八、探针安装"><a href="#八、探针安装" class="headerlink" title="八、探针安装"></a>八、探针安装</h2><h3 id="1-komari探针"><a href="#1-komari探针" class="headerlink" title="1. komari探针"></a>1. komari探针</h3><h4 id="1-1-通用安装命令："><a href="#1-1-通用安装命令：" class="headerlink" title="1.1 通用安装命令："></a>1.1 通用安装命令：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sL https://raw.githubusercontent.com/komari-monitor/komari-agent/refs/heads/main/install.sh) -e https://km.363689.xyz --auto-discovery 65XYUFUXSTekd98agpiDfW5L</span><br></pre></td></tr></table></figure><h4 id="1-2-到期通用安装："><a href="#1-2-到期通用安装：" class="headerlink" title="1.2 到期通用安装："></a>1.2 到期通用安装：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sL https://raw.githubusercontent.com/komari-monitor/komari-agent/refs/heads/main/install.sh) -e https://km.363689.xyz --auto-discovery 65XYUFUXSTekd98agpiDfW5L --valid-until 2026-12-31T00:00:00Z</span><br></pre></td></tr></table></figure><h4 id="1-3-删除探针"><a href="#1-3-删除探针" class="headerlink" title="1.3 删除探针"></a>1.3 删除探针</h4><ul><li>停止并禁用服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 停止服务</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl stop komari-agent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁用服务，使其不再开机自启</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">disable</span> komari-agent</span><br></pre></td></tr></table></figure><ul><li>删除服务文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">rm</span> /etc/systemd/system/komari-agent.service</span><br><span class="line"><span class="built_in">sudo</span> systemctl daemon-reload</span><br></pre></td></tr></table></figure><ul><li><span style="color:red">确认无任何自定义修改可以使用一行命令一键删除</span></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl stop komari-agent &amp;&amp; <span class="built_in">sudo</span> systemctl <span class="built_in">disable</span> komari-agent &amp;&amp; <span class="built_in">sudo</span> <span class="built_in">rm</span> -f /etc/systemd/system/komari-agent.service &amp;&amp; <span class="built_in">sudo</span> systemctl daemon-reload &amp;&amp; <span class="built_in">sudo</span> <span class="built_in">rm</span> -rf /opt/komari /var/log/komari</span><br></pre></td></tr></table></figure><h3 id="2-哪吒探针"><a href="#2-哪吒探针" class="headerlink" title="2. 哪吒探针"></a>2. 哪吒探针</h3><h4 id="1-1-ipv4安装命令："><a href="#1-1-ipv4安装命令：" class="headerlink" title="1.1 ipv4安装命令："></a>1.1 ipv4安装命令：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/nezhahq/scripts/main/agent/install.sh -o agent.sh &amp;&amp; <span class="built_in">chmod</span> +x agent.sh &amp;&amp; <span class="built_in">env</span> NZ_SERVER=nf.363689.xyz:80 NZ_TLS=<span class="literal">false</span> NZ_CLIENT_SECRET=IW0S5ke8JHvHoLF2EsCp5cpJcmwlc7TD ./agent.sh</span><br></pre></td></tr></table></figure><h4 id="1-2-ipv6安装命令："><a href="#1-2-ipv6安装命令：" class="headerlink" title="1.2 ipv6安装命令："></a>1.2 ipv6安装命令：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/nezhahq/scripts/main/agent/install.sh -o agent.sh &amp;&amp; <span class="built_in">chmod</span> +x agent.sh &amp;&amp; <span class="built_in">env</span> NZ_SERVER=[2a14:67c1:a070:2::71]:8008 NZ_TLS=<span class="literal">false</span> NZ_CLIENT_SECRET=O52OhEOrEMdmPKawD3tklh0YZJpNfoDJ ./agent.sh</span><br></pre></td></tr></table></figure><h4 id="1-3-恢复uuid安装参数："><a href="#1-3-恢复uuid安装参数：" class="headerlink" title="1.3 恢复uuid安装参数："></a>1.3 恢复uuid安装参数：</h4><p>NZ_UUID&#x3D;xxxxxxx</p><h4 id="1-4-删除探针"><a href="#1-4-删除探针" class="headerlink" title="1.4 删除探针"></a>1.4 删除探针</h4><ul><li>停止并卸载服务：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/nezha/agent/</span><br><span class="line">./nezha-agent service uninstall</span><br></pre></td></tr></table></figure><ul><li>删除 Agent 文件夹：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf /opt/nezha/agent/</span><br></pre></td></tr></table></figure><ul><li>如果安装了多个服务并想要全部卸载，可以使用 Agent 安装脚本的卸载功能：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./agent.sh uninstall</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Warp 自动重连脚本部署指南</title>
      <link href="/2025/09/23/2025.09.10_warp-%E8%87%AA%E5%8A%A8%E9%87%8D%E8%BF%9E%E8%84%9A%E6%9C%AC%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/"/>
      <url>/2025/09/23/2025.09.10_warp-%E8%87%AA%E5%8A%A8%E9%87%8D%E8%BF%9E%E8%84%9A%E6%9C%AC%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h2 id="1-warp安装"><a href="#1-warp安装" class="headerlink" title="1. warp安装"></a>1. warp安装</h2><p>首次运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N https://gitlab.com/fscarmen/warp/-/raw/main/menu.sh &amp;&amp; bash menu.sh</span><br></pre></td></tr></table></figure><p>日常维护</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">warp</span><br></pre></td></tr></table></figure><p>手动重连</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wg-quick down warp &amp;&gt;/dev/null; sed -i <span class="string">&quot;s/Endpoint.*/Endpoint = engage.cloudflareclient.com:4500/&quot;</span> /etc/wireguard/warp.conf; warp o</span><br></pre></td></tr></table></figure><h2 id="2-Warp-自动重连脚本部署"><a href="#2-Warp-自动重连脚本部署" class="headerlink" title="2. Warp 自动重连脚本部署"></a>2. Warp 自动重连脚本部署</h2><p>本指南将帮助您在 VPS 上部署一个脚本，以自动修复 Warp 的 IPv4 出口掉线问题</p><h4 id="2-1-创建并编辑脚本文件"><a href="#2-1-创建并编辑脚本文件" class="headerlink" title="2.1 创建并编辑脚本文件"></a>2.1 创建并编辑脚本文件</h4><p>首先，在您的 VPS 上创建一个名为 reconnect_warp.sh 的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano reconnect_warp.sh</span><br></pre></td></tr></table></figure><p>打开编辑器后，将下面的完整脚本代码复制并粘贴进去。粘贴完成后，按 Ctrl + X，然后按 Y，最后按 Enter 保存并退出。</p><p>完整脚本代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Warp 自动重启脚本</span></span><br><span class="line"><span class="comment"># 脚本会检查 IPv4 网络连通性，如果发现网络不通，就会自动修复 Warp。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 尝试 ping 一个可靠的 IPv4 地址，例如 Google 的公共 DNS。</span></span><br><span class="line"><span class="comment"># -c 1 表示只发送一个数据包。</span></span><br><span class="line"><span class="comment"># -w 3 表示超时时间为 3 秒。</span></span><br><span class="line">ping -c 1 -w 3 8.8.8.8 &gt; /dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"><span class="comment"># $? 是上一条命令的退出状态码。如果状态码不为 0，则表示 ping 失败。</span></span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="subst">$(date)</span>: IPv4 network connection failed, repairing Warp...&quot;</span></span><br><span class="line">    <span class="comment"># 强制 Warp 隧道关闭，然后重新连接。</span></span><br><span class="line">    wg-quick down warp &amp;&gt;/dev/null</span><br><span class="line">    sed -i <span class="string">&quot;s/Endpoint.*/Endpoint = [engage.cloudflareclient.com:4500/](https://engage.cloudflareclient.com:4500/)&quot;</span> /etc/wireguard/warp.conf</span><br><span class="line">    warp o</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="subst">$(date)</span>: IPv4 network connection is active. No action needed.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h4 id="2-2-赋予脚本执行权限"><a href="#2-2-赋予脚本执行权限" class="headerlink" title="2.2 赋予脚本执行权限"></a>2.2 赋予脚本执行权限</h4><p>接下来，您需要让系统知道这个文件是一个可执行的脚本。在终端中运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x reconnect_warp.sh</span><br></pre></td></tr></table></figure><h4 id="2-3-将脚本添加到定时任务-Cron"><a href="#2-3-将脚本添加到定时任务-Cron" class="headerlink" title="2.3 将脚本添加到定时任务 (Cron)"></a>2.3 将脚本添加到定时任务 (Cron)</h4><p>将脚本添加到定时任务 (Cron)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure><p>在打开的文件末尾，新开一行并添加以下命令。这会使脚本每 5 分钟自动运行一次</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/5 * * * * /root/reconnect_warp.sh</span><br></pre></td></tr></table></figure><p>完成以上步骤后，即使您的 Warp 再次掉线，系统也会自动检测并修复它，您无需再手动干预。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/09/23/hello-world/"/>
      <url>/2025/09/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
